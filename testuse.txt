{% extends 'user_front_page/base.html' %}

{% block content %}
<div class="row">
    <div class="col-md-8">
        <h1>Book List</h1>
    </div>
    <div class="col-md-4 text-end">
        <!-- 添加筛选框 -->
        <form method="get" class="form-inline my-3">
            <div class="form-group mx-sm-3 mb-2">
                <input type="text" name="search" class="form-control" placeholder="Search">
            </div>
            <button type="submit" class="btn btn-primary mb-2">Submit</button>
        </form>
    </div>
</div>

<a href="{% url 'upload_song' %}" class="btn btn-primary my-3">Add Song</a>

<table class="table">
    <thead>
    <tr>
        <th scope="col">歌名</th>
        <th scope="col">专辑</th>
        <th scope="col">作者</th>
        <th scope="col">时长</th>
        <th scope="col">操作</th>
    </tr>
    </thead>
    <tbody>
    {% for song in songs %}
    <tr>
        <td>{{ song.song_title }}</td>
        <td>{{ song.song_duration }}</td>
        <td>{{ song.song_author }}</td>
        <td>{{ song.song_classification }}</td>
        <td>
            <audio id="audio-{{ song.id }}">
                <source src="{{ song.audio_file.url }}" type="audio/mpeg">
            </audio>
            <button id="play-button-{{ song.id }}" onclick="playSong('{{ song.id }}')">播放</button>
            <button id="add_to_favorite-{{ song.id }}" onclick="handleFavorite({{ song.id }})">喜欢</button>
        </td>
    </tr>
    {% endfor %}
    </tbody>
</table>
<div id="player">
    <span id="current-song-title"></span>
    <button id="previous-button" onclick="playPreviousSong()">上一首</button>
    <button id="play-pause-button" onclick="togglePlayPause()">播放</button>
    <button id="next-button" onclick="playNextSong()">下一首</button>
    <label for="play-mode">播放模式：</label>
    <select id="play-mode" onchange="changePlayMode()">
        <option value="random">随机播放</option>
        <option value="sequential">顺序播放</option>
        <option value="repeat">单曲循环</option>
    </select>
</div>


<script>
    var player = document.getElementById("player");
    var currentSongTitle = document.getElementById("current-song-title");
    var previousButton = document.getElementById("previous-button");
    var playPauseButton = document.getElementById("play-pause-button");
    var nextButton = document.getElementById("next-button");
    var playModeSelect = document.getElementById("play-mode");
    var playMode = "random"; // 默认播放模式为随机播放

    var songs = JSON.parse('{{ songs_json  | safe }}');  // 用适当的值初始化 songs 变量
    // 初始化音频元素对象
    var audioElements = {};

    for (var i = 0; i < songs.length; i++) {
        var songId = songs[i];
        audioElements[songId] = document.getElementById("audio-" + songId);
    }

    updatePlayModeButton(); // 更新播放模式按钮的显示

    // 自动播放第一首歌曲
    if (songs.length > 0) {
        var firstSongId = songs[0];
        playSong(firstSongId);
    }


    function updatePlayModeButton() {
        playModeSelect.value = playMode;
    }

    function changePlayMode() {
        playMode = playModeSelect.value;
    }

    function playNextSong() {
        var currentSongId = currentlyPlayingSong.getAttribute('data-song-id');
        var currentSongIndex = songs.indexOf(currentSongId);
        var nextSongIndex;

        if (playMode === "sequential") {
            nextSongIndex = (currentSongIndex + 1) % songs.length;
        } else if (playMode === "random") {
            nextSongIndex = Math.floor(Math.random() * songs.length);
        } else if (playMode === "repeat") {
            nextSongIndex = currentSongIndex;
        }

        var nextSongId = songs[nextSongIndex];

        playSong(nextSongId);
    }

    function playPreviousSong() {
        var currentSongId = currentlyPlayingSong.getAttribute('data-song-id');
        var currentSongIndex = songs.indexOf(currentSongId);
        console.log("当前歌曲：",currentSongId,currentSongIndex,songs)
        var previousSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
        var previousSongId = songs[previousSongIndex];

        playSong(previousSongId);
    }

    function togglePlayPause() {
        if (currentlyPlayingSong.paused) {
            currentlyPlayingSong.play();
            playPauseButton.innerText = '暂停';
        } else {
            currentlyPlayingSong.pause();
            playPauseButton.innerText = '播放';
        }
    }
    var currentlyPlayingSong = null;

    function playSong(songId) {
        var audio = document.getElementById("audio-" + songId);
        var playButton = document.getElementById("play-button-" + songId);
        console.log("播放歌曲:", songId);
        console.log("音频元素:", audio);
        console.log("播放按钮:", playButton);

        // 其他的逻辑和代码

        // 打印一条消息以验证函数是否被调用
        console.log("playSong 函数被调用");
        currentlyPlayingSong = audio;
        if (currentlyPlayingSong && currentlyPlayingSong === audio) {
            // 当前点击的歌曲与正在播放的歌曲相同，切换播放/暂停状态
            if (audio.paused) {
                audio.play();
                playButton.innerText = '停止';
                playPauseButton.innerText = '暂停';
            } else {
                audio.pause();
                playButton.innerText = '播放';
                playPauseButton.innerText = '播放';
            }
        } else {
            // 当前点击的歌曲与正在播放的歌曲不同，停止当前播放的歌曲，并开始播放点击的歌曲
            if (currentlyPlayingSong) {
                currentlyPlayingSong.pause();
                var previousButton = document.getElementById("play-button-" + currentlyPlayingSong.getAttribute('data-song-id'));
                previousButton.innerText = '播放';
            }

            audio.play();
            playButton.innerText = '停止';
            currentlyPlayingSong = audio;

            // 更新播放栏信息
            currentSongTitle.innerText = audio.getAttribute('data-song-title');
            player.style.display = "block";
        }

        currentlyPlayingSong.setAttribute('data-song-id', songId); // 更新当前播放歌曲的data-song-id属性
    }
function handleFavorite(songId) {
    {% if user.is_authenticated %}
        // 用户已登录，执行喜欢操作
        addToFavorite(songId);
    {% else %}
        // 用户未登录，跳转到登录页面
        window.location.href = "{% url 'login' %}";
    {% endif %}
}

function addToFavorite(songId) {
    // 发送AJAX请求将歌曲添加到“favorite”列表
    $.ajax({
        url: "{% url 'add_to_favorite' %}",
        method: "POST",
        data: {
            songId: songId,
            csrfmiddlewaretoken: "{{ csrf_token }}",
        },
        success: function(response) {
            // 添加成功后的处理逻辑
            console.log("歌曲已添加到favorite列表");
        },
        error: function(xhr, errmsg, err) {
            // 错误处理逻辑
            console.log("添加到favorite列表时出错");
        }
    });
}

</script>

{% endblock %}



def online_song_list(request):
    songs = OnlineSongModel.objects.all()
    print("Songs:", songs)
    song_list = []
    for each_song in songs:
        song_list.append({"song_title": each_song.song_title,
                          "audio_file": each_song.audio_file.url,
                          "song_duration": each_song.song_duration,
                          "song_author": each_song.song_author,
                          "song_classification": each_song.song_classification})

    return render(request, 'user_front_page/online_songs/song_list.html',
                  {'songs': songs, "song_json": json.dumps(song_list)})
